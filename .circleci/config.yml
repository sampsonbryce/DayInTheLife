# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:7.10
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo
    environment:
      GCLOUD_PATH: /home/circleci/google-cloud-sdk/bin
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "./server/package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Install gcloud
          command: |
            set -x
            cd ~
            wget https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-163.0.0-linux-x86_64.tar.gz 
            tar -xf google-cloud-sdk-163.0.0-linux-x86_64.tar.gz

      - run:
          name: Install Docker Compose
          command: |
            set -x
            sudo bash -c "curl -L https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose"
            sudo chmod +x /usr/local/bin/docker-compose

      - setup_remote_docker

      - run: 
          name: Test Compose 
          command: |
            set -x
            cd ./blog && npm run build && cd ..
            docker-compose build 
            docker-compose up -d

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "./server/package.json" }}
        
      - deploy:
          name: Deploy to GCP
          command: |
            set -x
            echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json
            sudo ${GCLOUD_PATH}/gcloud --quiet components update
            sudo ${GCLOUD_PATH}/gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
            sudo ${GCLOUD_PATH}/gcloud config set project $GCLOUD_PROJECT
            

